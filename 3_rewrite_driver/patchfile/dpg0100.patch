--- dpg0100.bak	2019-12-29 14:43:22.637329356 +0900
+++ dpg0100.c	2019-12-29 14:48:07.142994312 +0900
@@ -16,7 +16,8 @@
 #include <linux/pci.h>
 #include <linux/sched.h>
 #include <asm/delay.h>
-#include <asm/system.h>
+//#include <asm/system.h>
+#include <asm/switch_to.h>
 #include <linux/hdreg.h>
 #include <linux/slab.h>
 
@@ -228,7 +229,8 @@
 }
 int gpg_MINOR_f(void *file)
 {
-	return MINOR(((struct file *)file)->f_dentry->d_inode->i_rdev);
+	//return MINOR(((struct file *)file)->f_dentry->d_inode->i_rdev);
+	return MINOR(((struct file *)file)->f_path.dentry->d_inode->i_rdev);
 }
 void *gpg_get_file_private_data(void *file)
 {
@@ -430,7 +432,8 @@
 }
 void gpg_init_timer(void *timer)
 {
-	init_timer((struct timer_list *)timer);
+	//init_timer((struct timer_list *)timer);
+	timer_setup((struct timer_list *)timer,NULL,0);
 	return;
 }
 void gpg_add_timer(void *timer)
@@ -974,15 +977,18 @@
 	}
 
 	down_read(&current->mm->mmap_sem);
-	ret = get_user_pages(current, current->mm, (Buffer & PAGE_MASK),
+	/*ret = get_user_pages(current, current->mm, (Buffer & PAGE_MASK),
 		mdl->NumberOfPages, Direction, 1,
-		(struct page **)mdl->PageList, NULL);
+		(struct page **)mdl->PageList, NULL);*/
+	ret = get_user_pages((Buffer & PAGE_MASK), mdl->NumberOfPages,
+			FOLL_FORCE | FOLL_WRITE, (struct page **)mdl->PageList, NULL);
 	up_read(&current->mm->mmap_sem);
 	if(ret < mdl->NumberOfPages) {
 		/* failed to lock pages */
 		if(ret > 0) {
 			for(i = 0; i < ret; i++) {
-				page_cache_release((struct page *)mdl->PageList[i]);
+				//page_cache_release((struct page *)mdl->PageList[i]);
+				put_page((struct page *)mdl->PageList[i]);
 			}
 			kfree(mdl->PageList);
 			mdl->PageList = NULL;
@@ -1004,7 +1010,8 @@
 			if(!PageReserved((struct page *)mdl->PageList[i])) {
 				SetPageDirty((struct page *)mdl->PageList[i]);
 			}
-			page_cache_release((struct page *)mdl->PageList[i]);
+			//page_cache_release((struct page *)mdl->PageList[i]);
+			put_page((struct page *)mdl->PageList[i]);
 		}
 		kfree(mdl->PageList);
 		mdl->PageList = NULL;
@@ -1274,3 +1281,5 @@
 	return;
 }
 
+MODULE_LICENSE("GPL");
+

